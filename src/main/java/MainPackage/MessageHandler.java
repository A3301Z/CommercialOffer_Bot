package MainPackage;

public class MessageHandler {
	CostOfEquipment costOfEquipment = new CostOfEquipment();
	boolean offerIsReady = false;
	boolean isAdministrative = false;
	boolean isIndustrial = false;
	boolean hIsHere = false;
	boolean totalAreaIsHere = false;
	boolean lIsHere = false;
	double h = 0;
	double totalArea = 0;
	double l = 0;

	public String purposeOfThePremises(String text) {
		String response;

		if (text.contains("/start")) {
			response = """
					üü¢–í—Å–µ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –≤–µ–ª–∏—á–∏–Ω—ã —É–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ –º–µ—Ç—Ä–∞—Öüü¢.
					–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–º–µ—â–µ–Ω–∏—è:\s
					""";
		} else if (text.equalsIgnoreCase("/Administration")
				&& !offerIsReady && !isNumber(text)
				|| text.equalsIgnoreCase("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —á–∞—Å—Ç—å")
				&& !offerIsReady && !isNumber(text)) {
			isAdministrative = true;
			response = "–£–∫–∞–∂–∏—Ç–µ –≤—ã—Å–æ—Ç—É –¥–æ –ø–æ—Ç–æ–ª–∫–∞.";
		} else if (text.equalsIgnoreCase("/Industrial")
				&& !offerIsReady && !isNumber(text)
				|| text.equalsIgnoreCase("–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å")
				&& !offerIsReady && !isNumber(text)) {
			isIndustrial = true;
			response = "–£–∫–∞–∂–∏—Ç–µ –≤—ã—Å–æ—Ç—É –¥–æ –ø–æ—Ç–æ–ª–∫–∞.";
		} else if (isNumber(text) && !totalAreaIsHere && !lIsHere
				&& !hIsHere && !offerIsReady && isAdministrative
				|| isNumber(text) && !totalAreaIsHere && !lIsHere
				&& !hIsHere && !offerIsReady && isIndustrial) {
			if (text.contains(",")) {
				h = Double.parseDouble((text.replace(",", ".")));
			} else {
				h = Double.parseDouble(text);
			}
			hIsHere = true;
			response = "–£–∫–∞–∂–∏—Ç–µ –æ–±—â—É—é –ø–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è.";
		} else if (h > 0 && !totalAreaIsHere && hIsHere && !offerIsReady && isNumber(text) && !lIsHere) {

			if (text.contains(",")) {
				totalArea = Double.parseDouble((text.replace(",", ".")));
			} else {
				totalArea = Double.parseDouble(text);
			}
			totalAreaIsHere = true;
			response = "–£–∫–∞–∂–∏—Ç–µ —Å–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π —É–∫—á–∞—Å—Ç–æ–∫ –ø–æ–º–µ—â–µ–Ω–∏—è.";
		} else if (h > 0 && totalAreaIsHere && hIsHere && isNumber(text)
				&& !offerIsReady && !lIsHere && totalArea > 0) {
			if (text.contains(",")) {
				l = Double.parseDouble((text.replace(",", ".")));
			} else {
				l = Double.parseDouble(text);
			}
			lIsHere = true;
			offerIsReady = true;
			response = "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ. ‚û°Ô∏è/download‚¨ÖÔ∏è";
		} else if (text.equalsIgnoreCase("/download") && offerIsReady
				&& isIndustrial && hIsHere && totalAreaIsHere && lIsHere
				&& l > 0 && totalArea > 0 && h > 0) {
			response = "–í–∞—à–µ –ö–ü –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π —á–∞—Å—Ç–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ. " + "–û–±—ä–µ–º –≤–æ–∑–¥—É—Ö–∞ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏ = " + airVolume() + ". " + "–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ —Å–æ—Å—Ç–∞–≤–∏—Ç " + costOfEquipment.returnOfPrice(airVolume());
		} else if (text.equalsIgnoreCase("/download") && offerIsReady
				&& isAdministrative && hIsHere && totalAreaIsHere
				&& lIsHere && l > 0 && totalArea > 0 && h > 0) {
			response = "–í–∞—à–µ –ö–ü –¥–ª—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ. " + "–û–±—ä–µ–º –≤–æ–∑–¥—É—Ö–∞ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏ = " + airVolume() + ". " + "–°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥ —Å–æ—Å—Ç–∞–≤–∏—Ç " + costOfEquipment.returnOfPrice(airVolume());
		} else {
			response = """
					‚ùå –ß—Ç–æ–±—ã –≤—Å—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å, —Å–ª–µ–¥—É–π—Ç–µ –º–æ–∏–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º.
					–ù–∞–∂–º–∏—Ç–µ ‚û°Ô∏è/start‚¨ÖÔ∏è –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.""";
			offerIsReady = false;
			isAdministrative = false;
			isIndustrial = false;
			hIsHere = false;
			totalAreaIsHere = false;
			lIsHere = false;
			h = 0;
			totalArea = 0;
			l = 0;
		} if (isAdministrative && isIndustrial) {
			isIndustrial = false;
			isAdministrative = false;
			hIsHere = false;
			lIsHere = false;
			totalAreaIsHere = false;
			l = 0;
			h = 0;
			totalArea = 0;
			response = "\uD83D\uDEAB –û—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø–æ–º–µ—â–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –∫–æ–Ω–µ—á–Ω–∞—è —Ü–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –û–î–ù–û –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. \uD83D\uDEAB";
		}
		return response;
	}

	private boolean isNumber(String s) throws NumberFormatException { // –ß–∏—Å–ª–æ –∏–ª–∏ –Ω–µ—Ç
		try {
			if (s.contains(",")) {
				Double.parseDouble(s.replace(",", "."));
			} else {
				Double.parseDouble(s);
			}
			return true;
		} catch (NumberFormatException e) {
			return false;
		}
	}

	private int airVolume() { // –§–æ—Ä–º—É–ª–∞ –æ–±—ä–µ–º–∞ –≤–æ–∑–¥—É—Ö–∞ –≤ –ø–æ–º–µ—â–µ–Ω–∏–∏
		return (int) Math.ceil((int) totalArea * h);
	}
}
